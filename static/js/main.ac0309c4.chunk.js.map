{"version":3,"sources":["components/UI/myModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/loader/Loader.module.css","components/UI/button/MyButton.tsx","components/PostItem.tsx","components/PostList.tsx","components/UI/input/MyInput.tsx","components/PostForm.tsx","components/UI/select/MySelect.tsx","components/PostFilter.tsx","components/UI/myModal/MyModal.tsx","hooks/usePosts.ts","api/Postservise.ts","components/UI/loader/Loader.tsx","App.tsx","index.tsx"],"names":["module","exports","MyButton","children","props","className","style","myBtn","PostItem","post","number","removePost","title","body","onClick","PostList","posts","length","textAlign","TransitionGroup","map","index","CSSTransition","timeout","classNames","id","MyInput","React","forwardRef","ref","myInput","PostForm","create","useState","setPost","value","type","placeholder","onChange","e","target","preventDefault","newPost","Date","now","MySelect","options","defaultValue","event","disabled","option","name","PostFilter","filter","setFilter","query","sort","selectedSort","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","stopPropagation","usePosts","sortedPosts","useMemo","console","log","a","b","localeCompare","useSortedPosts","toLowerCase","includes","PostServise","axios","get","response","data","Loader","loader","App","setPosts","modal","setModal","isPostsLoading","setIsPostsLoading","sortedAndSearchedPosts","setTimeout","getAll","useEffect","fetchPosts","then","r","marginTop","margin","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac0309c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__k7guX\",\"myModalContent\":\"MyModal_myModalContent__tuzge\",\"active\":\"MyModal_active__2Kkl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__tlHpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__1d8vN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3PV-4\",\"rotate\":\"Loader_rotate__1pcQg\"};","import React from 'react';\r\nimport style from './MyButton.module.css'\r\n\r\ntype MyButtonPropsType = {\r\n    disabled?: boolean\r\n    onClick?: (e: any) => void\r\n    style?: any\r\n}\r\n\r\nconst MyButton: React.FC<MyButtonPropsType> = ({children, ...props}) => {\r\n    return (\r\n        <button {...props} className={style.myBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import React from 'react';\r\nimport {PostType} from \"./PostList\";\r\nimport MyButton from './UI/button/MyButton';\r\n\r\n\r\nexport type PostItemPropsType = {\r\n    post: PostType\r\n    number: number,\r\n    removePost: (post: PostType) => void\r\n}\r\n\r\nconst PostItem: React.FC<PostItemPropsType> = ({post, number, removePost}) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__content\">\r\n                <strong>{number} {post.title}</strong>\r\n                <div>\r\n                    {post.body}\r\n                </div>\r\n            </div>\r\n            <div className=\"post__btn\">\r\n                <MyButton onClick={() => {removePost(post)}}>Удалить</MyButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;","import React from 'react';\r\nimport PostItem from \"./PostItem\";\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n\r\nexport type PostType = {\r\n    id: number,\r\n    title: string,\r\n    body: string\r\n}\r\nexport type PostListPropsType = {\r\n    posts: Array<PostType>,\r\n    title: string,\r\n    removePost: (post: PostType) => void\r\n}\r\n\r\nconst PostList: React.FC<PostListPropsType> = ({posts, title, removePost}) => {\r\n    if (!posts.length) {\r\n        return <h1 style={{textAlign: 'center'}}>\r\n            Посты не найдены\r\n        </h1>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center'}}>{title}</h1>\r\n            <TransitionGroup>\r\n                {posts.map((post, index) =>\r\n                    <CSSTransition\r\n                        key={post.id}\r\n                        timeout={500}\r\n                        classNames=\"post\"\r\n                    >\r\n                        <PostItem number={index + 1}\r\n                                  post={post} removePost={removePost}/>\r\n                    </CSSTransition>\r\n                )}\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostList;","import React from 'react';\r\nimport style from './MyInput.module.css'\r\n\r\nconst MyInput = React.forwardRef((props: any, ref) => {\r\n    return (\r\n        <input ref={ref} className={style.myInput} {...props} />\r\n    );\r\n})\r\n\r\nexport default MyInput;","import React, {useState} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {PostType} from \"./PostList\";\r\n\r\ntype PostFormPropsType = {\r\n    create: (newPost: PostType) => void\r\n}\r\n\r\nconst PostForm: React.FC<PostFormPropsType> = ({create}) => {\r\n\r\n    const [post, setPost] = useState({title: '', body: ''})\r\n\r\n    const addNewPost = (e: any) => {\r\n        e.preventDefault()\r\n        const newPost = {\r\n            id: Date.now(),  ...post\r\n        }\r\n        create(newPost)\r\n        setPost({title: '', body: ''})\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            {/*Управляемый инпут*/}\r\n            <MyInput\r\n                value={post.title}\r\n                type=\"text\"\r\n                placeholder='Название поста'\r\n                onChange={(e: any) => setPost({...post, title: e.target.value})}/>\r\n            {/*Неуправляемый инпут*/}\r\n            <MyInput\r\n                type=\"text\"\r\n                value={post.body}\r\n                onChange={(e: any) => setPost({...post, body: e.target.value})}\r\n                placeholder='Описание поста'\r\n            />\r\n            <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import React from 'react';\r\n\r\ntype OptionType = {\r\n    value: string,\r\n    name: string\r\n}\r\n\r\ntype MySelectPropsType = {\r\n    value: string\r\n    defaultValue: string,\r\n    options: Array<OptionType>\r\n    onChange: (sort: any) => void\r\n}\r\n\r\nconst MySelect:React.FC<MySelectPropsType> = ({options, defaultValue, value, onChange}) => {\r\n    return (\r\n        <select\r\n        value={value}\r\n        onChange={event => onChange(event.target.value)}\r\n        >\r\n            <option disabled value=\"\">{defaultValue}</option>\r\n            {options.map(option => {\r\n               return  <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                </option>\r\n            })}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;","import React, {Dispatch, SetStateAction} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\ntype PostFilterPropsType = {\r\n    filter: {\r\n        sort: string,\r\n        query: string\r\n    },\r\n    setFilter: Dispatch<SetStateAction<{ sort: string; query: string; }>>\r\n}\r\n\r\nconst PostFilter: React.FC<PostFilterPropsType> = ({filter,setFilter}) => {\r\n    return (\r\n        <div>\r\n            <MyInput\r\n                value={filter.query}\r\n                onChange={(event: any) => setFilter({...filter, query: event.target.value})}\r\n                placeholder='Поиск ...'\r\n            />\r\n            <MySelect\r\n                value={filter.sort}\r\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n                defaultValue='Сортировка'\r\n                options={[\r\n                    {value: 'title', name: 'По названию'},\r\n                    {value: 'body', name: 'По описанию'}\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostFilter;","import React from 'react';\r\nimport style from './MyModal.module.css'\r\n\r\ntype MyModalPropsType = {\r\n    visible: boolean\r\n    setVisible: (visible: boolean) => void\r\n}\r\n\r\nconst MyModal: React.FC<MyModalPropsType> = ({children, visible, setVisible}) => {\r\n\r\n    const rootClasses = [style.myModal]\r\n    if (visible) {\r\n        rootClasses.push(style.active)\r\n    }\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n            <div className={style.myModalContent} onClick={(e) => e.stopPropagation() }>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;","import {useMemo} from \"react\";\r\n\r\nexport const useSortedPosts = (posts: any, sort: any) => {\r\n    const sortedPost = useMemo(() => {\r\n        console.log('прошла перерисовка')\r\n        if (sort) {\r\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n        }\r\n        return posts\r\n    }, [sort, posts])\r\n    return sortedPost\r\n}\r\n\r\nexport const usePosts = (posts: any, sort: any, query: any) => {\r\n    const sortedPosts = useSortedPosts(posts, sort)\r\n    const sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter((post: any) => post.title.toLowerCase().includes(query.toLowerCase()))\r\n    }, [query, sortedPosts])\r\n    return sortedAndSearchedPosts\r\n}","import axios from \"axios\";\r\n\r\nexport default class PostServise {\r\n    static async getAll() {\r\n        try {\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n            return response.data\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n}","import React from 'react';\r\nimport style from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={style.loader}>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport PostList, {PostType} from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/myModal/MyModal\";\nimport MyButton from \"./components/UI/button/MyButton\";\nimport {usePosts} from \"./hooks/usePosts\";\nimport PostServise from \"./api/Postservise\";\nimport Loader from \"./components/UI/loader/Loader\";\n\n\nfunction App() {\n    const [posts, setPosts] = useState<Array<PostType>>([])\n\n    const [filter, setFilter] = useState({sort: '', query: ''})\n    const [modal, setModal] = useState(false)\n    const [isPostsLoading, setIsPostsLoading] = useState(false)\n\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\n\n    useEffect(() => {\n        fetchPosts().then(r => r)\n    }, [])\n\n    const createPost = (newPost: PostType) => {\n        setPosts([...posts, newPost])\n        setModal(false)\n    }\n\n    async function fetchPosts() {\n        setIsPostsLoading(true)\n        setTimeout(async ()=>{\n            const posts = await PostServise.getAll()\n            setPosts(posts)\n            setIsPostsLoading(false)\n        },3000)\n\n    }\n\n\n    const removePost = (post: PostType) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n    }\n\n    return (\n        <div className=\"App\">\n            <MyButton style={{marginTop: '30px'}} onClick={() => setModal(true)}>\n                Создать пользователя\n            </MyButton>\n            <MyModal visible={modal} setVisible={setModal}>\n                <PostForm create={createPost}/>\n            </MyModal>\n            <hr style={{margin: '15px'}}/>\n            <PostFilter filter={filter} setFilter={setFilter}/>\n            {isPostsLoading\n                ? <div className={'block'}><Loader/></div>\n                : <PostList removePost={removePost} posts={sortedAndSearchedPosts} title='Посты про JS'/>\n            }\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}