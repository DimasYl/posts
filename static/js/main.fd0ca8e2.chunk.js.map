{"version":3,"sources":["components/UI/input/MyInput.module.css","components/UI/button/MyButton.tsx","components/PostItem.tsx","components/PostList.tsx","components/UI/input/MyInput.tsx","components/PostForm.tsx","components/UI/select/MySelect.tsx","components/PostFilter.tsx","App.tsx","index.tsx","components/UI/button/MyButton.module.css"],"names":["module","exports","MyButton","children","props","className","style","myBtn","PostItem","post","number","removePost","title","body","onClick","PostList","posts","length","textAlign","map","index","id","MyInput","React","forwardRef","ref","myInput","PostForm","create","useState","setPost","value","type","placeholder","onChange","e","target","preventDefault","newPost","Date","now","MySelect","options","defaultValue","event","disabled","option","name","PostFilter","filter","setFilter","query","sort","selectedSort","App","setPosts","sortedPost","useMemo","console","log","a","b","localeCompare","sortedAndSearchedPosts","toLowerCase","includes","margin","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd0ca8e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__1d8vN\"};","import React from 'react';\r\nimport style from './MyButton.module.css'\r\n\r\ntype MyButtonPropsType = {\r\n    disabled?: boolean\r\n    onClick?: (e: any) => void\r\n}\r\n\r\nconst MyButton: React.FC<MyButtonPropsType> = ({children, ...props}) => {\r\n    return (\r\n        <button {...props} className={style.myBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import React from 'react';\r\nimport {PostType} from \"./PostList\";\r\nimport MyButton from './UI/button/MyButton';\r\n\r\n\r\nexport type PostItemPropsType = {\r\n    post: PostType\r\n    number: number,\r\n    removePost: (post: PostType) => void\r\n}\r\n\r\nconst PostItem: React.FC<PostItemPropsType> = ({post, number, removePost}) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__content\">\r\n                <strong>{number} {post.title}</strong>\r\n                <div>\r\n                    {post.body}\r\n                </div>\r\n            </div>\r\n            <div className=\"post__btn\">\r\n                <MyButton onClick={() => {removePost(post)}}>Удалить</MyButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;","import React from 'react';\r\nimport PostItem from \"./PostItem\";\r\n\r\nexport type PostType = {\r\n    id: number,\r\n    title: string,\r\n    body: string\r\n}\r\nexport type PostListPropsType = {\r\n    posts: Array<PostType>,\r\n    title: string,\r\n    removePost: (post: PostType) => void\r\n}\r\n\r\nconst PostList: React.FC<PostListPropsType> = ({posts, title, removePost}) => {\r\n    if (!posts.length) {\r\n        return <h1 style={{textAlign: 'center'}}>\r\n            Посты не найдены\r\n        </h1>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center'}}>{title}</h1>\r\n            {posts.map((post, index) => <PostItem number={index + 1}\r\n                                                  key={post.id} post={post} removePost={removePost}/>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostList;","import React from 'react';\r\nimport style from './MyInput.module.css'\r\n\r\nconst MyInput = React.forwardRef((props: any, ref) => {\r\n    return (\r\n        <input ref={ref} className={style.myInput} {...props} />\r\n    );\r\n})\r\n\r\nexport default MyInput;","import React, {useState} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {PostType} from \"./PostList\";\r\n\r\ntype PostFormPropsType = {\r\n    create: (newPost: PostType) => void\r\n}\r\n\r\nconst PostForm: React.FC<PostFormPropsType> = ({create}) => {\r\n\r\n    const [post, setPost] = useState({title: '', body: ''})\r\n\r\n    const addNewPost = (e: any) => {\r\n        e.preventDefault()\r\n        const newPost = {\r\n            id: Date.now(),  ...post\r\n        }\r\n        create(newPost)\r\n        setPost({title: '', body: ''})\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            {/*Управляемый инпут*/}\r\n            <MyInput\r\n                value={post.title}\r\n                type=\"text\"\r\n                placeholder='Название поста'\r\n                onChange={(e: any) => setPost({...post, title: e.target.value})}/>\r\n            {/*Неуправляемый инпут*/}\r\n            <MyInput\r\n                type=\"text\"\r\n                value={post.body}\r\n                onChange={(e: any) => setPost({...post, body: e.target.value})}\r\n                placeholder='Описание поста'\r\n            />\r\n            <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import React from 'react';\r\n\r\ntype OptionType = {\r\n    value: string,\r\n    name: string\r\n}\r\n\r\ntype MySelectPropsType = {\r\n    value: string\r\n    defaultValue: string,\r\n    options: Array<OptionType>\r\n    onChange: (sort: any) => void\r\n}\r\n\r\nconst MySelect:React.FC<MySelectPropsType> = ({options, defaultValue, value, onChange}) => {\r\n    return (\r\n        <select\r\n        value={value}\r\n        onChange={event => onChange(event.target.value)}\r\n        >\r\n            <option disabled value=\"\">{defaultValue}</option>\r\n            {options.map(option => {\r\n               return  <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                </option>\r\n            })}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;","import React, {Dispatch, SetStateAction} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\ntype PostFilterPropsType = {\r\n    filter: {\r\n        sort: string,\r\n        query: string\r\n    },\r\n    setFilter: Dispatch<SetStateAction<{ sort: string; query: string; }>>\r\n}\r\n\r\nconst PostFilter: React.FC<PostFilterPropsType> = ({filter,setFilter}) => {\r\n    return (\r\n        <div>\r\n            <MyInput\r\n                value={filter.query}\r\n                onChange={(event: any) => setFilter({...filter, query: event.target.value})}\r\n                placeholder='Поиск ...'\r\n            />\r\n            <MySelect\r\n                value={filter.sort}\r\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n                defaultValue='Сортировка'\r\n                options={[\r\n                    {value: 'title', name: 'По названию'},\r\n                    {value: 'body', name: 'По описанию'}\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostFilter;","import React, {useMemo, useState} from 'react';\nimport './App.css';\nimport PostList, {PostType} from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\n\n\nfunction App() {\n    const [posts, setPosts] = useState<Array<PostType>>([\n        {id: 1, title: 'a-Javascript', body: 'z-description'},\n        {id: 2, title: 'b-Javascript 2', body: 'x-description'},\n        {id: 3, title: 'c-Javascript 3', body: 'y-description'},\n    ])\n\n    const [filter, setFilter] = useState({sort: '', query: ''})\n\n    const sortedPost = useMemo(()=>{\n        console.log('прошла перерисовка')\n        if(filter.sort){\n            // @ts-ignore\n            return [...posts].sort((a,b) => a[filter.sort].localeCompare(b[filter.sort]))\n        }\n        return posts\n    },[filter.sort, posts])\n\n    const sortedAndSearchedPosts = useMemo(() => {\n            return sortedPost.filter(post => post.title.toLowerCase().includes(filter.query.toLowerCase()))\n    },[filter.query,sortedPost])\n\n    const createPost = (newPost: PostType) => {\n        // @ts-ignore\n        setPosts([...posts, newPost])\n    }\n\n    const removePost = (post: PostType) => {\n        setPosts(posts.filter(p => p.id !== post.id))\n    }\n\n    return (\n        <div className=\"App\">\n            <PostForm  create={createPost} />\n            <hr style={{margin: '15px'}}/>\n            <PostFilter filter={filter} setFilter={setFilter}/>\n                 <PostList removePost={removePost} posts={sortedAndSearchedPosts} title='Посты про JS'/>\n\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__tlHpH\"};"],"sourceRoot":""}